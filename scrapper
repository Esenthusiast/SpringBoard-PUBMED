from Bio import Entrez
from Bio import Medline
import pandas as pd

MAX_COUNT = 10
TERM = 'Cancer'

print('Getting {0} publications containing {1}...'.format(MAX_COUNT, TERM))
Entrez.email = 'youremail@email.com'
h = Entrez.esearch(db='pubmed', retmax=MAX_COUNT, term=TERM)
result = Entrez.read(h)
print('Total number of publications containing {0}: {1}'.format(TERM, result['Count']))
ids = result['IdList']

print(ids)
df_papers = pd.DataFrame( columns=['id', 'year','month', 'title', 'abstract','first_author', 'journal_name', 'journal_abb', 'language', 'mesh_terms_raw'])

for record in ids:
    records = Entrez.efetch(db='pubmed', id = record, retmode = "xml")
    results = Entrez.read(records)
    dict1= {}
    year = results['PubmedArticle'][0]['MedlineCitation']['Article']['Journal']['JournalIssue']['PubDate']['Year']
    title = results['PubmedArticle'][0]['MedlineCitation']['Article']['ArticleTitle']
    first_author_ln = results['PubmedArticle'][0]['MedlineCitation']['Article']['AuthorList'][0]['LastName'], results['PubmedArticle'][0]['MedlineCitation']['Article']['AuthorList'][0]['ForeName'] 
    abstract = results['PubmedArticle'][0]['MedlineCitation']['Article']['Abstract']['AbstractText']
    month = results['PubmedArticle'][0]['MedlineCitation']['Article']['Journal']['JournalIssue']['PubDate']['Month']
    journal_name = results['PubmedArticle'][0]['MedlineCitation']['Article']['Journal']['Title']
    journal_abb = results['PubmedArticle'][0]['MedlineCitation']['Article']['Journal']['ISOAbbreviation']
    language= results['PubmedArticle'][0]['MedlineCitation']['Article']['Language']
      
        
    dict1 = {'id': record, 'year': year, 'month': month, 'title': title, 'first_author': first_author_ln, 'abstract': abstract, 'journal_name':journal_name, 'journal_abb':journal_abb, 'language': language }
    
    df_papers=df_papers.append(dict1, ignore_index=True)


print('Populated database with results containing {0}: {1}'.format(TERM,  MAX_COUNT))
df_papers.to_csv('...data_test.tab', index=False, header=True, sep='\t')


print(df_papers.head(3))   
